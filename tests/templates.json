[{"author": "audreyr", "__class__": "Template", "repo": "cookiecutter-pypackage", "name": "cookiecutter-pypackage", "context": {"email": "aroy@alum.mit.edu", "project_slug": "{{ cookiecutter.project_name.lower().replace(' ', '_') }}", "full_name": "Audrey Roy Greenfeld", "version": "0.1.0", "project_name": "Python Boilerplate", "github_username": "audreyr", "release_date": "2016-1-22", "use_pypi_deployment_with_travis": "y", "year": "2016", "pypi_username": "{{ cookiecutter.github_username }}", "project_short_description": "Python Boilerplate contains all the boilerplate you need to create a Python package."}, "tags": ["2.6", "2.7", "3.3", "3.4", "3.5", "5990987", "a", "a", "above", "accept", "account", "activate", "add", "add", "additions", "also", "also", "and", "anything", "ardydedase", "atomic", "audreyr", "auto-release", "automated", "be", "better", "branch", "brief", "bsd", "bumping", "bumpversion", "can", "checking", "checklist", "ci", "command", "comparison", "config", "continuous", "conventions", "cookiecutter", "cookiecutter", "cookiecutter-pypackage", "cookiecutter-pypackage-pythonic", "cookiecutter-pypackage.git", "create", "create", "deployment", "description", "details", "differences", "do", "doc", "docs", "documentation", "doesn", "don", "easily", "encourage", "encrypt", "exactly", "example", "exhaustive", "experience", "family", "features", "feel", "file", "files", "find", "flake8", "flask", "for", "for", "fork", "fork", "free", "generate", "generation", "gist.github.com", "github", "github", "github.com", "good", "have", "here", "here", "hook", "https", "i", "if", "if", "in", "integration", "it", "it", "license", "like", "list", "listed", "make", "master", "modifications", "module", "more", "my", "nekroze", "network", "new", "not", "not", "numbers", "of", "on", "once", "optimizations", "optional", "optional", "options", "or", "or", "own", "own", "package", "packages", "packaging", "password", "pinning", "please", "pre-configured", "preferred", "project", "pull", "pull", "push", "put", "py", "py2.7", "pypi", "pytest", "python", "python", "quickstart", "rather", "re", "readme.rst", "readthedocs", "ready", "ready", "release", "release", "rename", "repo", "request", "request", "requests", "requirements", "requirements.txt", "run", "runner", "s", "script", "see", "see", "send", "separate", "service", "setup", "setup", "setup.py", "should", "similar", "single", "small", "software", "some", "sounds", "specifies", "sphinx", "standard", "strict", "strictly", "submit", "t", "tag", "template", "templates", "test", "testing", "than", "that", "the", "then", "there", "they", "think", "this", "this", "to", "tony", "tox", "travis", "travis-ci", "tree", "turn", "tutorial", "unittest", "up", "vanilla", "version", "view", "want", "way", "werkzeug-style", "what", "whatever", "when", "whether", "with", "working", "worry", "you", "you", "your", "your"]}, {"author": "ionelmc", "__class__": "Template", "repo": "cookiecutter-pylibrary", "name": "cookiecutter-pylibrary", "context": {"sphinx_theme": ["readthedocs", "sphinx-py3doc-enhanced-theme"], "command_line_interface": ["plain", "click", "no"], "codecov": ["yes", "no"], "codacy": ["no", "yes"], "c_extension_support": ["no", "yes"], "requiresio": ["yes", "no"], "release_date": "today", "version": "0.1.0", "project_name": "Nameless", "repo_name": "python-nameless", "appveyor": ["yes", "no"], "test_matrix_separate_coverage": ["no", "yes"], "email": "contact@ionelmc.ro", "distribution_name": "nameless", "test_matrix_configurator": ["no", "yes"], "travis": ["yes", "no"], "command_line_interface_bin_name": "nameless", "test_runner": ["pytest", "nose"], "c_extension_optional": ["no", "yes"], "landscape": ["no", "yes"], "website": "http://blog.ionelmc.ro", "c_extension_cython": ["no", "yes"], "full_name": "Ionel Cristian Maries", "sphinx_doctest": ["no", "yes"], "github_username": "ionelmc", "coveralls": ["no", "yes"], "package_name": "nameless", "codeclimate": ["no", "yes"], "year": ["now", "2016", "2015-2016", "2014-2016", "2013-2016", "2012-2016", "2011-2016", "2010-2016", "2009-2016", "2008-2016", "2007-2016", "2006-2016", "2005-2016"], "scrutinizer": ["no", "yes"], "project_short_description": "An example package. Generated with cookiecutter-pylibrary."}, "tags": ["1", "1.0.0", "1.0.1", "1.1.0", "2-clause", "2.0", "2.0.0", "2.7", "3", "3.3", "a", "about", "account", "add", "add", "added", "address", "advanced", "after", "agents", "all", "allow", "also", "alternative", "always", "an", "and", "and", "answers", "any", "appengine", "appveyor", "appveyor", "area", "around", "as", "asked", "assuming", "at", "available", "available", "avoid", "bad", "badge", "bare", "based", "basic", "be", "because", "before", "before", "best", "bin", "blog", "bootstrap", "both", "browsers", "bsd", "build", "building", "building", "built", "bumping", "bumpversion", "but", "but", "by", "c", "can", "cannot", "cause", "causes", "change", "changelog", "changelog.rst", "changes", "check", "check", "checks", "ci", "clean", "cli", "click", "codacy", "code", "codeclimate", "codecov", "collect", "combo", "comes", "command", "commands", "commit", "compiled", "compiler", "complex", "conf.py", "configuration", "configurations", "confusing", "contents", "continuous", "convenience", "cookiecutter", "cookiecutter", "cookiecutter-pylibrary", "cookiecutter-pypackage", "cookiecutter.codacy", "cookiecutter.codeclimate", "cookiecutter.codecov", "cookiecutter.coveralls", "cookiecutter.landscape", "cookiecutter.scrutinizer", "coverage", "coveralls", "create", "creating", "criticism", "curious", "d", "data", "default", "default", "dependencies", "description", "designed", "developing", "different", "dirs", "dirty", "dist", "distributing", "distribution", "distributions", "dists", "docs", "doctest", "doctesting", "doctests", "documentation", "documentation", "does", "doesn", "don", "don", "e", "egg-info", "empty", "enable", "enable", "enabled", "env", "environment", "environments", "errors", "errs", "etc", "even", "exactly", "example", "executable", "extension", "extensions", "extra", "features", "fields", "file", "files", "final", "find", "first", "flake8", "for", "for", "forget", "from", "generate", "generated", "generation", "generator", "get", "gh", "git", "github", "github", "github.com", "go", "going", "good", "got", "has", "have", "having", "headings", "here", "hexadecimal", "hook", "https", "huge", "id", "if", "if", "implemented", "import", "importing", "in", "including", "inclusive", "increase", "indicated", "init", "initial", "initial", "install", "involved", "ionelmc", "is", "isn", "isort", "issue", "issues", "it", "it", "just", "l", "landscape", "largely", "later", "libraries", "library", "license", "like", "longer", "m", "major", "make", "make", "makefile", "management", "manages", "managing", "manifest.in", "master", "matrix", "mccabe", "measurement", "measuring", "metadata", "minimal", "minimum", "minor", "missing", "modules", "more", "most", "name", "name", "nameless", "nameless", "neatly", "need", "new", "no", "no", "nose", "nose", "not", "not", "note", "notes", "now-days", "number", "of", "old", "on", "only", "open", "option", "option", "optional", "optional", "options", "or", "origin", "other", "out", "outputted", "over", "package", "packages", "packaging", "packaging", "passenv", "passes", "passing", "password", "patch", "pep8", "pip", "pitfalls", "pkg", "place", "plain", "plaintext", "please", "pose", "possible", "post", "probably", "problem", "problems", "project", "projects", "prompt", "proper", "provides", "pull", "push", "pushing", "py", "pyflakes", "pypi", "pypi", "pypi.python.org", "pypy", "pytest", "pytest", "python", "python", "python-nameless", "python-nameless.git", "qa", "quality", "questions", "quickly", "quite", "re", "read", "read", "readme", "readme.rst", "readthedocs", "readthedocs", "ready", "regenerate", "register", "regular", "release", "releases", "releasing", "releasing", "remote", "remove", "replace", "repo", "repository", "repository", "request", "required", "requirements", "requirements", "requirements.txt", "requires.io", "requiresio", "responsive", "result", "resulting", "rf", "rm", "run", "run", "runner", "running", "runs", "s", "save", "script", "scrutinizer", "sdist", "sdk", "secure", "securely", "see", "see", "selenium", "semantic", "sent", "separate", "service", "set", "settings", "settings", "setup.py", "setuptools", "setuptools", "several", "shell", "should", "shouldn", "side", "simple", "site-packages", "skel", "skip-existing", "slighly", "so", "some", "sorry", "sort", "sorts", "specify", "sphinx", "sphinx-py3doc-enhanced-theme", "src", "ssh", "stale", "stand", "started", "still", "stored", "straigh", "strange", "strictness", "string", "subprocesses", "suggested", "suggestions", "support", "support", "sure", "system", "t", "table", "template", "template", "templates", "test", "test", "testing", "tests", "than", "that", "that", "the", "the", "them", "theme", "then", "then", "there", "there", "these", "this", "this", "to", "to", "too", "tool", "tox", "tox", "tox.ini", "tracking", "travis", "travis", "travis-ci", "travis.yml", "turn", "twine", "u", "up", "upload", "uploading", "url", "usage", "usage", "use", "used", "using", "valid", "variable", "variables", "vc", "verbose", "verify", "version", "version", "versioning", "versions", "very", "virtualenv", "want", "want", "way", "we", "what", "what", "whatever", "wheels", "which", "why", "widely", "will", "with", "works", "works", "would", "yes", "yet", "you", "you", "your"]}, {"author": "pytest-dev", "__class__": "Template", "repo": "cookiecutter-pytest-plugin", "name": "cookiecutter-pytest-plugin", "context": {"email": "raphael@hackebrot.de", "full_name": "Raphael Pierzina", "plugin_name": "foobar", "version": "0.1.0", "github_username": "hackebrot", "license": ["MIT", "BSD-3", "GNU GPL v3.0", "Apache Software License 2.0"], "short_description": "A simple plugin to use with Pytest", "year": "2015", "module_name": "{{ cookiecutter.plugin_name|lower|replace('-', '_') }}", "pytest_version": "2.8.1", "docs_tool": ["mkdocs", "sphinx", "none"]}, "tags": ["0.1.0", "1", "1.1.0", "2", "2.8.1", "2015", "3", "a", "a", "about", "along", "an", "and", "andreas", "andreas", "any", "apache", "appveyor", "as", "at", "authoring", "authors", "awesome", "been", "better", "bsd-3", "chat", "choice", "choose", "ci", "cli", "code", "code", "codebases", "comprehensive", "conduct", "configuration", "conftest.py", "consult", "containing", "contains", "continuous", "contribute", "contribute", "cookiecutter", "cookiecutter", "cookiecutter-pytest-plugin", "core", "created", "describing", "description", "detailed", "distributed", "docs", "documentation", "either", "email", "encounter", "equivalent", "everyone", "example", "expected", "features", "featuring", "file", "files", "fixture", "follow", "following", "foobar", "for", "free", "from", "generate", "get", "getting", "github.com", "gnu", "go", "gpl", "guidelines", "hackebrot", "hackebrot.de", "has", "help", "hence", "higher", "hook", "hooks", "how", "https", "if", "in", "index.md", "info", "info", "information", "install", "installable", "integration", "interacting", "is", "issue", "issues", "it", "just", "license", "license", "license", "licenses", "licensing", "lists", "long", "mac", "mailing", "makes", "matching", "meet", "minimal", "minimal", "mit", "mkdocs", "mkdocs", "mkdocs.yml", "more", "moving", "need", "new", "none", "number", "of", "official", "on", "open", "option", "optional", "or", "organization", "os", "package", "pelme", "pelme", "pelme.se", "pierzina", "pip", "plan", "platforms", "please", "please", "plugin", "plugin", "plugins", "prefixed", "presence", "problems", "programs", "project", "prompts", "py", "pypa", "pypi", "pytest", "pytest", "pytest-awesome", "pytest-dev", "pytest.ini", "raphael", "raphael", "rather", "readme", "readme.rst", "reference", "regarding", "requirements", "requirements", "requires", "resources", "rooms", "running", "runs", "s", "see", "select", "setup.py", "several", "short", "simple", "simply", "software", "source", "sphinx", "sphinx", "started", "started", "submit", "submitting", "such", "suite", "sure", "template", "terms", "test", "tested", "tests", "that", "the", "there", "this", "this", "to", "tox", "tox.ini", "tracker", "trackers", "travis", "under", "unless", "use", "useful", "uses", "using", "v", "v2.0", "v3.0", "variables", "version", "visit", "want", "we", "welcome", "well", "which", "with", "working", "working", "write", "x", "year", "yosemite", "you", "your"]}, {"author": "vintasoftware", "__class__": "Template", "repo": "cookiecutter-tapioca", "name": "cookiecutter-tapioca", "context": {"email": "filipeximenes@gmail.com", "api_root_url": "url to the root of the api", "full_name": "Filipe Ximenes", "service_name": "The Name Of The Service Being Wrapped", "use_basic_auth": "n", "github_username": "filipeximenes", "use_oauth_2": "n", "use_oauth_1": "n", "version": "0.1"}, "tags": ["an", "and", "any", "api", "auth", "based", "basic", "clients", "contact", "cookiecutter", "cookiecutter", "cookiecutter-tapioca", "email", "features", "for", "gh", "have", "help", "help", "if", "install", "need", "oauth1", "oauth2", "or", "pip", "please", "pypi", "python", "questions", "ready", "send", "support", "tapioca-wrapper", "template", "to", "usage", "vinta.com.br", "vintasoftware", "web", "wrappers", "you"]}, {"author": "pydanny", "__class__": "Template", "repo": "cookiecutter-django", "name": "cookiecutter-django", "context": {"email": "Your email", "timezone": "UTC", "use_python2": "n", "author_name": "Your Name", "open_source_license": ["MIT", "BSD", "Not open source"], "use_mailhog": "n", "version": "0.1.0", "use_newrelic": "n", "windows": "n", "domain_name": "example.com", "use_sentry": "n", "now": "2016/03/05", "description": "A short description of the project.", "project_name": "project_name", "repo_name": "{{ cookiecutter.project_name|replace(' ', '_') }}", "use_celery": "n", "year": "{{ cookiecutter.now[:4] }}", "use_opbeat": "n", "use_whitenoise": "y"}, "tags": ["0.0.1", "0.1.0", "01", "03", "05", "1", "1.8", "1.9", "100", "12-factor", "127.66", "2", "2.7.x", "2015", "2016", "222", "283", "3", "3.5.x", "310", "3rd", "479", "550", "58", "9.0", "a", "a", "about", "accept", "add", "after", "against", "all", "alpha", "also", "always", "amazon", "amongst", "and", "angularjs", "answer", "answer", "apache", "are", "around", "articles", "as", "at", "atomic", "awesome", "awesome", "based", "basic", "be", "bed", "better", "book", "bootstrap", "bsd", "build", "but", "by", "called", "can", "carefully", "cd", "celery", "change", "chapter", "choose", "clone", "clone", "cloning", "co-authored", "comes", "commit", "compass", "compressing", "concepts", "configuration", "configuration", "configurations", "constraints", "cookiecutter", "cookiecutter", "cookiecutter-django", "cookiecutter-django", "cookiecutter-django.git", "counting", "coverage", "create", "create", "custom", "daniel", "delta", "deltas", "deploying", "deployment", "describe", "described", "description", "developing", "development", "development", "differences", "django", "django-allauth", "django-environ", "do", "docker", "docker", "docker-compose", "don", "don", "done", "during", "e-mail", "editing", "efforts", "elements", "email", "emails", "enabled", "encourage", "end", "end-to-end", "enter", "environment", "error", "etc", "everywhere", "exactly", "exactly", "example.com", "experience", "features", "features", "fedora", "files", "find", "first", "first", "following", "for", "for", "forget", "forgotten", "fork", "fork", "from", "generated", "get", "gets", "git", "github", "github.com", "gmail.com", "go", "greenfeld", "grid", "grunt", "have", "here", "heroku", "hitch", "html", "https", "i", "ideas", "if", "if", "imports", "in", "include", "information", "init", "initial", "install", "integrated", "integration", "integrations", "into", "is", "issues", "it", "it", "kib", "know", "let", "let", "libraries", "list", "listed", "livereload", "ll", "local", "locally", "logging", "look", "ls", "m", "mailgun", "mailhog", "maintained", "make", "marked", "master", "match", "may", "me", "media", "might", "mit", "model", "module", "moment", "monitoring", "must", "my", "myreddit.com", "n", "name", "name", "necessarily", "new", "newrelic", "not", "not", "notice", "now", "now", "objects", "of", "on", "once", "only", "opbeat", "open", "optimized", "optional", "options", "or", "or", "origin", "other", "out", "own", "packages", "party", "performance", "pip", "places", "point", "possible", "postgresql", "precisely", "preferred", "pretend", "procfile", "production", "project", "project", "projects", "prompted", "prompts", "pull", "pull", "push", "py.test", "pydanny", "python", "questions", "rather", "re", "readers", "readme", "ready", "reason", "receiving", "reddit", "reddit", "redditclone", "redditclone.git", "registration", "release", "releases", "releases", "remote", "rename", "renders", "repo", "request", "requests", "resolving", "result", "results", "reused", "right", "run", "run", "s", "s3", "scattered", "scoops", "see", "select", "sending", "sentry", "serve", "serves", "settings", "setup", "short", "similar", "small", "so", "some", "sometimes", "sometimes", "source", "spreading", "stable", "starting", "startproject", "static", "storage", "stuff", "stuff", "submit", "submit", "support", "support", "t", "take", "template", "templates", "test", "testing", "tests", "than", "that", "the", "the", "their", "them", "then", "there", "these", "they", "things", "third-party", "this", "this", "throughout", "timezone", "to", "total", "trust", "trying", "twitter", "two", "u", "unittest", "until", "up", "usage", "used", "user", "using", "utc", "v4.0.0", "valid", "variables", "various", "version", "via", "volunteers", "want", "want", "warning", "we", "what", "what", "where", "whether", "whitenoise", "will", "windows", "with", "won", "word", "work", "working", "works", "worry", "worst", "y", "year", "you", "you", "your", "your"]}]